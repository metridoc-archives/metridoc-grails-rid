In this project, we use Grails as the MVC development framework.
Grails is an Open Source, full stack, web application framework for the JVM.
It takes advantage of the Groovy programming language and convention over configuration to provide
a productive and stream-lined development experience.

Groovy is an object-oriented programming language for the Java platform.
It is a dynamic language with features similar to those of Python, Ruby, and Perl,
and can be used as a scripting language for the Java Platform. It is dynamically compiled to
Java Virtual Machine (JVM) bytecode, and interoperates with other Java code and libraries.
Groovy uses a Java-like bracket syntax, and most Java code is also syntactically valid Groovy.
Additionally, Groovy supports functional programming, such as closure and currying.

Grails gives a very clear structure of the web application.

!../../../src/docs/img/GrailsStructure.png!

From the above picture, you can see there are three main parts in a Grails application:
domains, views, and controllers. Since Grails is a MVC framework, these three parts correspond to
Model, View and Controller, respectively.

!../../../src/docs/img/ERModel.png!

Compared to the ER model above, you may find the relationship between domain classes
(the Model part of MVC) and database tables more intuitively clear.
Grails' use of convention over configuration helps keep the relationship between domains, views, and controllers
 equally clear. For example, the domain class RidCourseSponsor
is stored in the table named “rid_course_sponsor”, and all web pages regard to it are in the folder named
“ridCourseSponsor”. The controller is named as “RidCourseSponsorController”.

Please refer to [this page|guide:appendix] of this report for a relationship model among all these domain classes.
